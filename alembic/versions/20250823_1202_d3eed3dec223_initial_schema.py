"""Initial schema

Revision ID: d3eed3dec223
Revises: 
Create Date: 2025-08-23 12:02:08.010664

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd3eed3dec223'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('database_stats',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('stat_name', sa.String(), nullable=False),
    sa.Column('stat_value', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stat_name')
    )
    op.create_table('items',
    sa.Column('item_id', sa.String(), nullable=False),
    sa.Column('dataset', sa.String(), nullable=False),
    sa.Column('domain', sa.String(), nullable=True),
    sa.Column('question', sa.Text(), nullable=False),
    sa.Column('answer', sa.Text(), nullable=True),
    sa.Column('metadata', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('item_id')
    )
    op.create_table('migration_history',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('migration_id', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('applied_at', sa.DateTime(), nullable=True),
    sa.Column('schema_version', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('migration_id')
    )
    op.create_table('runs',
    sa.Column('run_id', sa.String(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('git_sha', sa.String(), nullable=True),
    sa.Column('config_yaml', sa.Text(), nullable=False),
    sa.Column('config_hash', sa.String(), nullable=False),
    sa.Column('seed', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('total_evaluations', sa.Integer(), nullable=True),
    sa.Column('completed_evaluations', sa.Integer(), nullable=True),
    sa.Column('metadata', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('run_id')
    )
    op.create_table('aggregates',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('run_id', sa.String(), nullable=False),
    sa.Column('model_id', sa.String(), nullable=False),
    sa.Column('dataset', sa.String(), nullable=False),
    sa.Column('domain', sa.String(), nullable=True),
    sa.Column('transform', sa.String(), nullable=False),
    sa.Column('scramble_level', sa.Float(), nullable=True),
    sa.Column('acc_mean', sa.Float(), nullable=False),
    sa.Column('acc_ci_low', sa.Float(), nullable=True),
    sa.Column('acc_ci_high', sa.Float(), nullable=True),
    sa.Column('rrs', sa.Float(), nullable=True),
    sa.Column('ldc', sa.Float(), nullable=True),
    sa.Column('n_items', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['run_id'], ['runs.run_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_aggregates_lookup', 'aggregates', ['run_id', 'model_id', 'transform'], unique=False)
    op.create_index('idx_aggregates_model_performance', 'aggregates', ['model_id', 'acc_mean'], unique=False)
    op.create_table('evals',
    sa.Column('eval_id', sa.String(), nullable=False),
    sa.Column('run_id', sa.String(), nullable=False),
    sa.Column('item_id', sa.String(), nullable=False),
    sa.Column('model_id', sa.String(), nullable=False),
    sa.Column('model_family', sa.String(), nullable=True),
    sa.Column('n_params', sa.Float(), nullable=True),
    sa.Column('provider', sa.String(), nullable=False),
    sa.Column('transform', sa.String(), nullable=False),
    sa.Column('scramble_level', sa.Float(), nullable=True),
    sa.Column('prompt', sa.Text(), nullable=True),
    sa.Column('completion', sa.Text(), nullable=True),
    sa.Column('is_correct', sa.Boolean(), nullable=True),
    sa.Column('acc', sa.Float(), nullable=True),
    sa.Column('prompt_tokens', sa.Integer(), nullable=True),
    sa.Column('completion_tokens', sa.Integer(), nullable=True),
    sa.Column('tok_kl', sa.Float(), nullable=True),
    sa.Column('tok_frag', sa.Float(), nullable=True),
    sa.Column('latency_ms', sa.Integer(), nullable=True),
    sa.Column('cost_usd', sa.Float(), nullable=True),
    sa.Column('seed', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.item_id'], ),
    sa.ForeignKeyConstraint(['run_id'], ['runs.run_id'], ),
    sa.PrimaryKeyConstraint('eval_id')
    )
    op.create_index('idx_evals_run_model', 'evals', ['run_id', 'model_id'], unique=False)
    op.create_index('idx_evals_timestamp', 'evals', ['timestamp'], unique=False)
    op.create_index('idx_evals_transform', 'evals', ['transform', 'scramble_level'], unique=False)
    op.create_table('paraphrase_cache',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('item_id', sa.String(), nullable=False),
    sa.Column('provider', sa.String(), nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('cos_sim', sa.Float(), nullable=True),
    sa.Column('edit_ratio', sa.Float(), nullable=True),
    sa.Column('bleu_score', sa.Float(), nullable=True),
    sa.Column('accepted', sa.Boolean(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.item_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_paraphrase_lookup', 'paraphrase_cache', ['item_id', 'accepted'], unique=False)
    op.create_index('idx_paraphrase_provider', 'paraphrase_cache', ['provider', 'accepted'], unique=False)
    op.create_index('idx_paraphrase_quality', 'paraphrase_cache', ['cos_sim', 'edit_ratio'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_paraphrase_quality', table_name='paraphrase_cache')
    op.drop_index('idx_paraphrase_provider', table_name='paraphrase_cache')
    op.drop_index('idx_paraphrase_lookup', table_name='paraphrase_cache')
    op.drop_table('paraphrase_cache')
    op.drop_index('idx_evals_transform', table_name='evals')
    op.drop_index('idx_evals_timestamp', table_name='evals')
    op.drop_index('idx_evals_run_model', table_name='evals')
    op.drop_table('evals')
    op.drop_index('idx_aggregates_model_performance', table_name='aggregates')
    op.drop_index('idx_aggregates_lookup', table_name='aggregates')
    op.drop_table('aggregates')
    op.drop_table('runs')
    op.drop_table('migration_history')
    op.drop_table('items')
    op.drop_table('database_stats')
    # ### end Alembic commands ###